// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MessageStatus {
  unread
  read
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
  posts    Post[]

  friendshipsSent     Friendship[] @relation("FriendshipsSent")
  friendshipsReceived Friendship[] @relation("FriendshipsReceived")
  receivedMessages    Messages[]   @relation("ReceivedMessages")
  sentMessages        Messages[]   @relation("SentMessages")
}

model Friendship {
  id         Int      @id @default(autoincrement())
  sender     User     @relation("FriendshipsSent", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("FriendshipsReceived", fields: [receiverId], references: [id])
  receiverId Int
  status     String   @default("pending")
  createdAt  DateTime @default(now())
}

model Messages {
  id         Int           @id @default(autoincrement())
  sender     User          @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User          @relation("ReceivedMessages", fields: [receiverId], references: [id])
  content    String
  receiverId Int
  status     MessageStatus @default(unread)
  createdAt  DateTime      @default(now())
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  content   String?
  userId    Int
  imageId   Int?
  tags      Tag[]    @relation("PostTags")

  User  User   @relation(fields: [userId], references: [id])
  Image Image? @relation(fields: [imageId], references: [id])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostTags")
}

model Image {
  id         Int      @id @default(autoincrement())
  imageData  Bytes
  uploadedAt DateTime @default(now())
  Post       Post[]
}
